/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define ALPHA 0
#define NUMFN 1
#define SYMBL 2
#define NAVVL 3

&soft_off { hold-time-ms = <5000>; };

/ {
    combos {
        compatible = "zmk,combos";

        left_enter {
            bindings = <&kp ENTER>;
            key-positions = <1 12 22>;
        };

        right_enter {
            bindings = <&kp ENTER>;
            key-positions = <8 17 26>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <3 14>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <2 13>;
        };

        hold_space {
            bindings = <&kp SPACE>;
            key-positions = <31 23>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <14 15>;
        };

        toggle_nav {
            bindings = <&tog 2>;
            key-positions = <11 2 13>;
            layers = <0 2>;
            require-prior-idle-ms = <350>;
        };

        jsdoc {
            bindings = <&jsdoc>;
            key-positions = <28 20>;
        };

        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <13 12 16 17>;
        };

        screen_shot {
            bindings = <&kp LS(LG(S))>;
            key-positions = <0 11>;
        };

        reset {
            bindings = <&sys_reset>;
            key-positions = <0 31 32 9>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <4 14 5 15>;
        };

        slash_question_mark {
            bindings = <&kp SLASH>;
            key-positions = <28 27>;
        };
    };

    behaviors {
        hm: HOMEROW_MODS {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <250>;
        };

        hs: HOMEROW_SHIFT {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
        };
    };

    macros {
        jsdoc: jsdoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FSLH &kp STAR &kp STAR &kp SPACE>;
            label = "JSDOC";
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        ALPHA {
            bindings = <
&kp Q       &kp W       &kp E        &kp R         &kp T            &kp Y         &kp U         &kp I        &kp O       &kp P
&hm LGUI A  &hm LALT S  &hm LCTRL D  &hs LSHIFT F  &kp G            &kp H         &hs RSHIFT J  &hm RCTRL K  &hm RALT L  &hm RIGHT_GUI SINGLE_QUOTE
&kp Z       &kp X       &kp C        &kp V         &kp B            &kp N         &kp M         &kp COMMA    &kp DOT
&lt 2 TAB   &lt 1 SPACE                &lt 2 BACKSPACE  &lt 1 DELETE
            >;
        };

        NUMSYM {
            bindings = <
&kp N1                 &kp N2           &kp N3           &kp N4         &kp N5      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER  &kp PLUS   &kp TILDE
&hm LEFT_GUI NUMBER_6  &hm LEFT_ALT N7  &hm LCTRL N8     &hm LSHFT N9   &kp N0      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp MINUS  &kp EQUAL  &kp GRAVE
&kp KP_PLUS            &kp KP_MINUS     &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp KP_DOT  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SEMI   &kp COLON
&kp LS(TAB)      &trans                          &kp LGUI    &trans
            >;
        };

        NAVFUN {
            bindings = <
&mt LEFT_SHIFT PG_UP  &mt LEFT_ALT HOME  &mt LCTRL UP  &mt LEFT_ALT END  &kp LA(LC(LS(BACKSLASH)))  &trans      &kp F9        &kp F10       &kp F11      &kp F12
&mt LCTRL PG_DN       &kp LEFT           &kp DOWN      &kp RIGHT         &kp BACKSPACE              &kp DELETE  &hm RSHFT F5  &hm RCTRL F6  &hm RALT F7  &hm RIGHT_GUI F8
&kp LC(Z)             &kp LC(X)          &kp LC(C)     &kp LC(V)         &kp LS(LC(K))              &kp F1      &kp F2        &kp F3        &kp F4
&trans             &trans                          &trans                     &trans
            >;
        };

        MISC {
            bindings = <
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &trans  &trans  &trans  &trans          &trans
&bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &trans  &trans  &trans  &trans          &trans
&bt BT_CLR     &trans         &trans         &trans         &trans         &trans  &trans  &trans  &bt BT_CLR_ALL
&trans         &trans                        &trans         &trans
            >;
        };
    };
};